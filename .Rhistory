band_stack<-stack(raster_image_data_Resample)
raster_Images_maks_Resample
Mask_Arub_image_data$`2010.0102`
band_stack<-stack(Mask_Arub_image_data)
as.data.frame(band_stack,xy=TRUE)%>%na.omit()->frame
frame
memory.size(max = TRUE)
as.data.frame(band_stack,xy=TRUE)%>%na.omit()->frame
band_stack
band_stack$X2010.0102
plot(band_stack$X2010.0102)
band_stack$X2010.0102
band_stack
as.data.frame(band_stack$X2010.0102,xy=TRUE)
as.data.frame(band_stack$X2010.0102,xy=TRUE)%>%na.omit()->fg
fg
memory.limit(24000000)
memory.limit(max=FALSE)
memory.limit(24000000)
memory.limit(size = 400000000)
as.data.frame(band_stack$X2010.0102,xy=TRUE)%>%na.omit()->fg
fg
as.data.frame(band_stack,xy=TRUE)%>%na.omit()->frame
memory.limit(size = 40000000000000000)
as.data.frame(band_stack,xy=TRUE)%>%na.omit()->frame
band_stack<-stack(raster_image_data_Resample)
setwd("C:\\Aruba Country Rainfall Data\\Resample")
for (i in Mask_Arub_image_data) {
q<-paste0(destfile = names(i),".tif")
fg<-resample(i,Resample_reference,"ngb")
writeRaster(fg,q,bylayer=TRUE)
}
# stack list of rasters in to one raster image in R
Mask_Arub<-list.files(path = getwd(),pattern = ".tiff$")
lapply(Mask_Arub,raster)->Mask_Arub_image_data
data.frame(substr(data_names$raster_Images,7,15))->Image.Number
names(Image.Number)<-c("Image")
names(Mask_Arub_image_data)<-Image.Number$Image
setwd("C:\\Aruba Country Rainfall Data\\Clip to Arab")
# stack list of rasters in to one raster image in R
Mask_Arub<-list.files(path = getwd(),pattern = ".tiff$")
lapply(Mask_Arub,raster)->Mask_Arub_image_data
data.frame(substr(data_names$raster_Images,7,15))->Image.Number
names(Image.Number)<-c("Image")
names(Mask_Arub_image_data)<-Image.Number$Image
Mask_Arub_image_data
names(Mask_Arub_image_data)<-Image.Number$Image
setwd("C:\\Aruba Country Rainfall Data\\Resample")
for (i in Mask_Arub_image_data) {
q<-paste0(destfile = names(i),".tif")
fg<-resample(i,Resample_reference,"ngb")
writeRaster(fg,q,bylayer=TRUE)
}
Mask_Arub_image_data
setwd("C:\\Aruba Country Rainfall Data\\Resample")
setwd("C:\\Aruba Country Rainfall Data")
Grid<-readOGR("LebononGrid.shp")
Aruba_Country<-readOGR("arebcountries_Disolved.shp")
Arebcountries_Grid_Data<-readOGR("Arebcountries_Grid_Data.shp")
Resample_reference<-raster("Resample_reference.tif")
url<-"https://data.chc.ucsb.edu/products/CHIRP/2-monthly/"
raster_Images_maks_Resample
setwd("C:\\Aruba Country Rainfall Data\\Download Rainfall Data")
raster_Images<-list.files(path = getwd(),pattern = ".tiff$")
lapply(raster_Images,raster)->raster_image_data
data.frame(raster_Images)->data_names
names(raster_image_data)<-data_names$raster_Images
setwd("C:\\Aruba Country Rainfall Data\\Clip to Arab")
# stack list of rasters in to one raster image in R
Mask_Arub<-list.files(path = getwd(),pattern = ".tiff$")
lapply(Mask_Arub,raster)->Mask_Arub_image_data
lapply(Mask_Arub,raster)->Mask_Arub_image_data
# stack list of rasters in to one raster image in R
Mask_Arub<-list.files(path = getwd(),pattern = ".tiff$")
lapply(Mask_Arub,raster)->Mask_Arub_image_data
data.frame(substr(data_names$raster_Images,7,15))->Image.Number
names(Image.Number)<-c("Image")
names(Mask_Arub_image_data)<-Image.Number$Image
setwd("C:\\Aruba Country Rainfall Data\\Resample")
raster_Images_maks_Resample<-list.files(path = getwd(),pattern = ".tif$")
lapply(raster_Images_maks_Resample,raster)->raster_image_data_Resample
band_stack<-stack(raster_image_data_Resample)
as.data.frame(band_stack,xy=TRUE)%>%na.omit()->frame
frame
setwd("C:\\Aruba Country Rainfall Data\\Resample")
for (i in Mask_Arub_image_data) {
q<-paste0(destfile = names(i),".tif")
fg<-resample(i,Resample_reference,"ngb")
writeRaster(fg,q,bylayer=TRUE)
}
setwd("C:\\Aruba Country Rainfall Data\\Resample")
for (i in Mask_Arub_image_data) {
q<-paste0(destfile = names(i),".tif")
fg<-resample(i,Resample_reference,"ngb")
writeRaster(fg,q,bylayer=TRUE)
}
raster_Images_maks_Resample<-list.files(path = getwd(),pattern = ".tif$")
lapply(raster_Images_maks_Resample,raster)->raster_image_data_Resample
raster_image_data_Resample
band_stack<-stack(raster_image_data_Resample)
raster_image_data_Resample
as.data.frame(band_stack,xy=TRUE)%>%na.omit()->frame
frame
write.csv("frame.csv")
points <- frame%>%st_as_sf(coords=c('x','y'), crs=4326)
points
fg<-st_read("Arebcountries_Grid_Data.shp")
fg
write_sf(fg,"C:\\Aruba Country Rainfall Data\\Clip to Arab")
fg
st_write(poly, "Arebcountries_Grid_Data.shp")
poly
fg
poly
SpatialPolygons(poly)
plot(poly)
mapview(poly)
poly <- point.in.poly(Arebcountries_Grid_Data,points)
Arebcountries_Grid_Data
philly_sf_merged
st_write(philly_sf_merged, "Arebcountries_Grid_Data.shp")
philly_sf_merged <- sp::merge(Arebcountries_Grid_Data,pts.poly, by = c("x" = "x", "y" = "y"))
philly_sf_merged
philly_sf_merged
SpatialPolygons(philly_sf_merged)
write_sf(SpatialPolygons,"C:/Aruba Country Rainfall Data/Clip to Arab")
library(sf)
write_sf(SpatialPolygons,"C:/Aruba Country Rainfall Data/Clip to Arab")
philly_sf_merged
SpatialPolygons
plot(SpatialPolygons)
SpatialPolygons
philly_sf_merged
write_sf(philly_sf_merged,"C:/Aruba Country Rainfall Data/Clip to Arab")
st_write(philly_sf_merged, "Arebcountries_Grid_Data.shp")
Arebcountries_Grid_Data
getwd()
list.files(path = getwd(),pattern = ".shp")
st_write(philly_sf_merged,  "Arebcountries_Grid_Data.shp")
Arebcountries_Grid_Data<-readOGR("arebcountries_Grid20KM.shp")
setwd("C:\\Aruba Country Rainfall Data")
Arebcountries_Grid_Data<-readOGR("arebcountries_Grid20KM.shp")
poly <- point.in.poly(points, Arebcountries_Grid_Data)
poly
philly_sf_merged <- sp::merge(Arebcountries_Grid_Data,pts.poly, by = c("x" = "x", "y" = "y"))
mapview(philly_sf_merged)
st_write(Arebcountries_Grid_Data,"Arebcountries_Grid_Data.shp",driver="ESRI Shapfile")
setwd("C:\\Aruba Country Rainfall Data\\Resample")
Arebcountries_Grid_Data
mapview(Arebcountries_Grid_Data)
mapview(philly_sf_merged)
philly_sf_merged <- sp::merge(Arebcountries_Grid_Data,pts.poly, by = c("x" = "x", "y" = "y"))
mapview(philly_sf_merged)
philly_sf_merged
philly_sf_merged$CHIRP.2010.0102
points
poly <- point.in.poly(points, Arebcountries_Grid_Data)
setwd("C:\\Aruba Country Rainfall Data")
Aruba_Country<-readOGR("arebcountries_Grid.shp")
Aruba_Country
Aruba_Country<-readOGR("arebcountries_Grid.shp")
frame
write.csv(frame,"frame.csv")
rm(arebcountries_Grid)
rm(Arebcountries_Grid_Data)
setwd("C:\\Aruba Country Rainfall Data")
Grid<-readOGR("LebononGrid.shp")
Aruba_Country<-readOGR("arebcountries_Grid.shp")
Arebcountries_Grid_Data<-readOGR("arebcountries_Grid20KM.shp")
Arebcountries_Grid_Data
Arebcountries_Grid_Data
poly <- point.in.poly(points, Arebcountries_Grid_Data)
poly
philly_sf_merged <- sp::merge(Arebcountries_Grid_Data,pts.poly, by = c("x" = "x", "y" = "y"))
philly_sf_merged
philly_sf_merged$CHIRP.2010.0102
philly_sf_merged <- sp::merge(Arebcountries_Grid_Data,poly, by = c("x" = "x", "y" = "y"))
philly_sf_merged
philly_sf_merged$CHIRP.2010.0102
philly_sf_merged
mapview(philly_sf_merged)
philly_sf_merged
philly_sf_merged
philly_sf_merged
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="philly_sf_merged", driver="ESRI Shapefile") # this is in geographical projection
philly_sf_merged
library(GISTools)
install.packages("GISTools")
library(maptools)
library(RColorBrewer)
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="philly_sf_merged", driver="ESRI Shapefile") # this is in geographical projection
library(maptools)
library(RColorBrewer)
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="philly_sf_merged", driver="ESRI Shapefile") # this is in geographical projection
setwd("C:\\Aruba Country Rainfall Data\\Resample")
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="arebcountries_Grid20KM.shp", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="arebcountries_Grid20KM", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=philly_sf_merged, layer="arebcountries_Grid20KM", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=philly_sf_merged, dsn=getwd(), layer="arebcountries_Grid20KM", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=philly_sf_merged, dsn=getwd(), layer="arebcountries_Grid20KMdata", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="grid", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=philly_sf_merged, dsn="C:/Aruba Country Rainfall Data/Resample", layer="grid", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=philly_sf_merged, dsn="C:/Aruba Country Rainfall Data/Resample", layer="arebcountries_Grid20KM.shp", driver="ESRI Shapefile") # this is in geographical projection
philly_sf_merged
philly_sf_merged[1;5]
philly_sf_merged[1:5]
d<-philly_sf_merged[1:5]
d
writeOGR(obj=d, dsn="C:/Aruba Country Rainfall Data/Resample", layer="arebcountries_Grid20KM.shp", driver="ESRI Shapefile") # this is in geographical projection
writeOGR(obj=d, dsn="C:/Aruba Country Rainfall Data/Resample", layer="gr.shp", driver="ESRI Shapefile") # this is in geographical projection
d<-philly_sf_merged[1:7]
d
writeOGR(obj=d, dsn="C:/Aruba Country Rainfall Data/Resample", layer="grf.shp", driver="ESRI Shapefile") # this is in geographical projection
Organise_linkslist
Linkes_datasets
Linkes_datasets
Linkes
c(Linkes)->Linkes_datasets
Linkes
Linkes_datasets[-1:-348]->Linkes_datasets
Linkes
Linkes_datasets
Linkes_datasets
setwd("C:\\Aruba Country Rainfall Data\\Download Rainfall Data")
raster_Images<-list.files(path = getwd(),pattern = ".tiff$")
lapply(raster_Images,raster)->raster_image_data
raster_image_data
raster_image_data
data.frame(raster_Images)->data_names
data_names
names(raster_image_data)<-data_names$raster_Images
raster_image_data
data_names
data_names$raster_Images
data_names$raster_Images
gsub('CHIRP.', '', data_names$raster_Images)->datasets_Gsub
datasets_Gsub
raster_Images
data_names
data_names[,2:5]
data_names[5]
data_names[5,]
data_names
data_names[2:5,]
data_names
subs(data_names,5:5)
#Rainfall_Arub_melt$image_number<-substr(data_names $variable,7,15)
data_names$Year<-substr(data_names $variable,7,10)
data_names$Year<-substr(data_names$raster_Images,7,10)
data_names
View(data_names)
data_names$Month<-substr(data_names$raster_Images,12,13)
View(data_names)
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Month<-c("January","february","march","April","may","june ","july","august","september","october","october","december")
Month_ID<-data.frame(ID,Month)
joined_tibble <- left_join(data_names, Month_ID,
by = c("Month" = "ID"))
joined_tibble
setwd("C:\\Aruba Country Rainfall Data\\Download Rainfall Data")
raster_Images<-list.files(path = getwd(),pattern = ".tiff$")
lapply(raster_Images,raster)->raster_image_data
data.frame(raster_Images)->data_names
data_names$Year<-substr(data_names$raster_Images,7,10)
data_names$Month<-substr(data_names$raster_Images,12,13)
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Month<-c("January","february","march","April","may","june ","july","august","september","october","october","december")
Month_ID<-data.frame(ID,Month)
joined_tibble <- left_join(data_names, Month_ID,
by = c("Month" = "ID"))
library(dplyr)
setwd("C:\\Aruba Country Rainfall Data\\Download Rainfall Data")
raster_Images<-list.files(path = getwd(),pattern = ".tiff$")
lapply(raster_Images,raster)->raster_image_data
data.frame(raster_Images)->data_names
data_names$Year<-substr(data_names$raster_Images,7,10)
data_names$Month<-substr(data_names$raster_Images,12,13)
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Month<-c("January","february","march","April","may","june ","july","august","september","october","october","december")
Month_ID<-data.frame(ID,Month)
joined_tibble <- left_join(data_names, Month_ID,
by = c("Month" = "ID"))
data_names$ID<-as.numeric(data_names$Month)
joined_tibble <- left_join(data_names, Month_ID,
by = c("Month" = "ID"))
joined_tibble <- left_join(data_names, Month_ID,
by = c("ID" = "ID"))
joined_tibble
data_names$ID<-substr(data_names$raster_Images,12,13)
data_names$ID<-as.numeric(data_names$ID)
joined_tibble <- left_join(data_names, Month_ID,
by = c("ID" = "ID"))
joined_tibble
Month_ID<-data.frame(Year,ID)
Month_ID<-data.frame(ID,Year)
data_names
Month_ID<-data.frame(ID,Year)
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Month<-c("January","february","march","April","may","june ","july","august","september","october","october","december")
Month_ID<-data.frame(ID,Year)
data_names
setwd("C:\\Aruba Country Rainfall Data\\Download Rainfall Data")
raster_Images<-list.files(path = getwd(),pattern = ".tiff$")
lapply(raster_Images,raster)->raster_image_data
data.frame(raster_Images)->data_names
data_names$Year<-substr(data_names$raster_Images,7,10)
data_names$ID<-substr(data_names$raster_Images,12,13)
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Month<-c("January","february","march","April","may","june ","july","august","september","october","october","december")
Month_ID<-data.frame(ID,Year)
Month_ID<-data.frame(ID,Month)
data_names$ID<-as.numeric(data_names$ID)
data_names
joined_tibble <- left_join(data_names, Month_ID,
by = c("ID" = "ID"))
joined_tibble
joined_tibble$Data<-paste0(joined_tibble$Year,joined_tibble$Month)
joined_tibble
joined_tibble$Data<-paste0(joined_tibble$Year," - ",joined_tibble$Month)
joined_tibble
joined_tibble$Data<-paste0(joined_tibble$Year,"/",joined_tibble$Month)
joined_tibble
joined_tibble$Data<-paste0(joined_tibble$Year," Month",joined_tibble$Month)
joined_tibble
joined_tibble$Data<-paste0(joined_tibble$Year," Month ",joined_tibble$Month)
joined_tibble
joined_tibble$Data<-paste0(joined_tibble$Year,"_",joined_tibble$Month)
joined_tibble
joined_tibble$Data<-paste0("Year",joined_tibble$Year,"_",joined_tibble$Month)
joined_tibble
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Month<-c("January","february","march","April","May","June ","July","August","September","October","November","december")
Month_ID<-data.frame(ID,Month)
data_names$ID<-as.numeric(data_names$ID)
joined_tibble <- left_join(data_names, Month_ID,
by = c("ID" = "ID"))
names(raster_image_data)<-data_names$raster_Images
joined_tibble
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Month<-c("January","February","March","April","May","June ","July","August","September","October","November","December")
Month_ID<-data.frame(ID,Month)
data_names$ID<-as.numeric(data_names$ID)
data_names$ID<-as.numeric(data_names$ID)
joined_tibble <- left_join(data_names, Month_ID,
by = c("ID" = "ID"))
joined_tibble$Data<-paste0("Year",joined_tibble$Year,"_",joined_tibble$Month)
joined_tibble
names(Mask_Arub_image_data)<-joined_tibble$Data
Mask_Arub_image_data
mapview(Mask_Arub_image_data$Year2010_January)
Mask_Arub_image_data$Year2010_January
Mask_Arub_image_data$Year2010_September
mapview(Mask_Arub_image_data$Year2010_September)
Mask_Arub_image_data$Year2010_September
Mask_Arub_image_data
Mask_Arub_image_data$Year2010_January
mapview(Mask_Arub_image_data$Year2010_January)
Mask_Arub_image_data
Mask_Arub_image_data$Year2010_January
mapview(Mask_Arub_image_data$Year2010_January)
Mask_Arub_image_data$Year2010_January
Mask_Arub_image_data
Mask_Arub_image_data$`Year2010_June `
mapview(Mask_Arub_image_data$`Year2010_June `)
Mask_Arub_image_data
Mask_Arub_image_data$Year2010_January
mapview(Mask_Arub_image_data$Year2010_January)
mapview(Mask_Arub_image_data$Year2010_January)
philly_sf_merged[1:8]
philly_sf_merged[1:7]
writeOGR(obj=philly_sf_merged[1:7], dsn="tempdir", layer="torn2", driver="ESRI Shapefile") # this is in equal area projection
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="torn", driver="ESRI Shapefile")
setwd("C:\\Aruba Country Rainfall Data\\Resample")
writeOGR(obj=philly_sf_merged, dsn="tempdir", layer="torsn", driver="ESRI Shapefile")
philly_sf_merged
philly_sf_merged[1:8]
writeOGR(obj=philly_sf_merged[1:7], dsn="tempdir", layer="torsn", driver="ESRI Shapefile")
writeOGR(obj=philly_sf_merged[1:7], dsn="tempdir", layer="ss.shp", driver="ESRI Shapefile")
writeOGR(obj=philly_sf_merged[1:7], dsn="tempdir", layer="ss.shp", driver="ESRI Shapefile")
st_write(philly_sf_merged[1:7],"ss.shp",driver="ESRI Shapefile")
st_write(philly_sf_merged[1:7],"ss.shp",driver="ESRI Shapefile")
writeSpatialShape(philly_sf_merged[1:7], "torn").
library(maptools)
writeSpatialShape(philly_sf_merged[1:7], "torn").
writeSpatialShape(philly_sf_merged[1:7], "torn.shp").
?writeSpatialShape
writeSpatialShape(philly_sf_merged, tmpfl)
writeSpatialShape(philly_sf_merged, getwd())
philly_sf_merged
philly_sf_merged@proj4string
mapview(philly_sf_merged)
getwd()
writeSpatialShape(philly_sf_merged, getwd())
getwd()
shapefile(philly_sf_merged[1:7], filename='C:/Aruba Country Rainfall Data/Resample/file.shp')
shapefile(philly_sf_merged[1:7], filename='C:/Aruba Country Rainfall Data/Resample/file.shp')
shapefile(philly_sf_merged[1:7], filename='C:/Aruba Country Rainfall Data/Resample/file.shp',overwrite=TRUE)
shapefile(philly_sf_merged[1:7], filename='C:/Aruba Country Rainfall Data/Resample/file.shp',overwrite=TRUE)
philly_sf_merged
philly_sf_merged@polygons
philly_sf_merged
mapview(philly_sf_merged)
mapview(philly_sf_merged)
philly_sf_merged
setwd("C:\\Aruba Country Rainfall Data")
library(rgdal)
library(raster)
library(httr)
library(XML)
library(RCurl)
library(dplyr)
library(MASS)
library(reshape2)
library(reshape)
library(odbc)
library(yaml)
library(spatialEco)
library(odbc)
library(DBI)
# Pull the list of urels in from the link
setwd("C:\\Aruba Country Rainfall Data")
Arebcountries_Grid_Data<-readOGR("arebcountries_Grid20KM.shp")
Resample_reference<-raster("CHIRP.2010.0405.tif")
url<-"https://data.chc.ucsb.edu/products/CHIRP/2-monthly/"
url
resource<-GET(url)
parse <-htmlParse(resource)
links<-xpathSApply(parse, path="//a", xmlGetAttr, "href")
lapply(links,function(x){rt<-paste0("https://data.chc.ucsb.edu/products/CHIRP/2-monthly/",x)})->linkslist
linkslist
Organise_linkslist <- data.frame(matrix(unlist(linkslist), nrow=length(linkslist), byrow=TRUE))
Organise_linkslist
names(Organise_linkslist)<-"Datasets"
data.frame(Organise_linkslist[-1:-5,])->Datasets
Datasets
Linkes <- Datasets[-nrow(Datasets),]
Linkes
c(Linkes)->Linkes_datasets
Linkes_datasets
Linkes_datasets[-1:-348]->Linkes_datasets
options(timeout=10000000000)
Linkes_datasets
options(timeout=10000000000)
Linkes_datasets
Linkes_datasets$
Linkes_datasets
Linkes_datasets[1:15]
setwd("C:\\Test\\Download Rainfall Data")
Linkes_datasets[1:15]
\Resample
Linkes_datasets[1:15]
c(Linkes)->Linkes_datasets
Linkes_datasets
Linkes_datasets[-1:-348]->Linkes_datasets
Linkes_datasets[1:5]->Linkes_datasets
options(timeout=10000000000)
library(rgdal)
library(raster)
library(httr)
library(XML)
library(RCurl)
library(dplyr)
library(MASS)
library(reshape2)
library(reshape)
library(odbc)
library(yaml)
library(spatialEco)
library(odbc)
library(DBI)
# Pull the list of urels in from the link
setwd("C:\Test")
rm(list = ls())
library(rgdal)
library(raster)
library(httr)
library(XML)
library(RCurl)
library(dplyr)
library(MASS)
library(reshape2)
library(reshape)
library(odbc)
library(yaml)
library(spatialEco)
library(odbc)
library(DBI)
# Pull the list of urels in from the link
setwd("C:\\Test")
Arebcountries_Grid_Data<-readOGR("arebcountries_Grid20KM.shp")
Resample_reference<-raster("CHIRP.2010.0405.tif")
url<-"https://data.chc.ucsb.edu/products/CHIRP/2-monthly/"
resource<-GET(url)
parse <-htmlParse(resource)
links<-xpathSApply(parse, path="//a", xmlGetAttr, "href")
lapply(links,function(x){rt<-paste0("https://data.chc.ucsb.edu/products/CHIRP/2-monthly/",x)})->linkslist
Organise_linkslist <- data.frame(matrix(unlist(linkslist), nrow=length(linkslist), byrow=TRUE))
names(Organise_linkslist)<-"Datasets"
data.frame(Organise_linkslist[-1:-5,])->Datasets
Linkes <- Datasets[-nrow(Datasets),]
c(Linkes)->Linkes_datasets
Linkes_datasets[-1:-348]->Linkes_datasets
Linkes_datasets[1:5]->Linkes_datasets
options(timeout=10000000000)
for (i in Linkes_datasets) {
q<-paste0(destfile = basename(i),".tiff")
download.file(i,q, mode = 'wb')
}
rm(list = ls(
))
setwd("C:\\Test\\Download Rainfall Data")
getwd()
